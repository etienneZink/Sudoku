
import java.awt.Color;
import java.awt.Container;
import java.awt.EventQueue;
import java.awt.GridLayout;
import java.awt.event.KeyEvent;
import java.text.NumberFormat;

import javax.swing.BorderFactory;
import javax.swing.ComboBoxEditor;
import javax.swing.JComponent;
import javax.swing.JFormattedTextField;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.text.Document;
import javax.swing.text.NumberFormatter;


public class Main extends JFrame{
	
	public Main() {
		setTitle("GUI");
		setSize(300, 300);
		setLocationRelativeTo(null);
		setDefaultCloseOperation(EXIT_ON_CLOSE);
		
		
		Container pane = getContentPane();
		pane.setLayout(new GridLayout(9, 9));
		
		NumberFormat format = NumberFormat.getInstance(getLocale());
	    NumberFormatter button = new NumberFormatter(format);
	    button.setValueClass(Integer.class);
	    button.setMinimum(1);
	    button.setMaximum(9);
	    button.setAllowsInvalid(false);
	    button.setOverwriteMode(true);
	    
	   	  
		
	    JFormattedTextField test0 = new JFormattedTextField();
	    final int borderWidth = 1;
	    final int rows = 9;
	    final int cols = 9;
	   // JPanel panel = new JPanel(new GridLayout(rows, cols));
	    test0.setBorder(BorderFactory.createEmptyBorder(1,1,1,1));

	    for (int row = 0; row < rows; row++) {
	        for (int col = 0; col < cols; col++) {
	            final JFormattedTextField test1 = new JFormattedTextField(button);
	            if (row == 0 || row == 3 || row == 6 || row == 9) {
	                if (col == 0 || col == 3 || col == 6 || col == 9) {
	                    // Top left corner, draw all sides
	                    test1.setBorder(BorderFactory.createLineBorder(Color.BLACK));
	                }
	                else {
	                    // Top edge, draw all sides except left edge
	                    test1.setBorder(BorderFactory.createMatteBorder(borderWidth, 
	                                                                    0, 
	                                                                    borderWidth, 
	                                                                    borderWidth, 
	                                                                    Color.BLACK));
	                }
	            }
	            else {
	                if (col == 0 || col == 3 || col == 6 || col == 9) {
	                    // Left-hand edge, draw all sides except top
	                    test1.setBorder(BorderFactory.createMatteBorder(0, 
	                                                                    borderWidth, 
	                                                                    borderWidth, 
	                                                                    borderWidth, 
	                                                                    Color.BLACK));
	                }
	                else {
	                    // Neither top edge nor left edge, skip both top and left lines
	                    test1.setBorder(BorderFactory.createMatteBorder(0, 
	                                                                    0, 
	                                                                    borderWidth, 
	                                                                    borderWidth, 
	                                                                    Color.BLACK));
	                }
	            }
	            pane.add(test1);
	        }
	    }
	}
	
	

	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			
			@Override
			public void run() {
				// TODO Auto-generated method stub
				Main m = new Main();
				m.setVisible(true);
			}
		});
	}
}
